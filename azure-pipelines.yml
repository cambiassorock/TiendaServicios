# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  tokenSonarCloud: $[variables.SONARTOKEN]

stages :
- stage: Build
  jobs:
  - job: Compile
    steps:
    - bash: echo Empieza Build
    - bash: echo Mi Variable:$(PipeLineLeveVariables)
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'ConexionSonarCloud'
        organization: 'cambiassorockazuredevsecops'
        scannerMode: 'MSBuild'
        projectKey: 'TiendaServicios_Azure'
        projectName: 'TiendaServicios_Azure'
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.DefaultWorkingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: SonarCloudAnalyze@1
    - task: SnykSecurityScan@1
      inputs:
        serviceConnectionEndpoint: 'ConexionSnyk'
        testType: 'app'
        monitorWhen: 'always'
        failOnIssues: true
        projectName: 'TiendaServicios_Azure'
        organization: '5759043e-df6e-4931-85e7-906499b01fc5'

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '$(Parameters.TestProjects)'
        arguments: '--configuration $(BuildConfiguration)'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/*.txt'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: DevDeploy
  dependsOn: Build
  jobs:
  - job: DevDeployJob
    steps:
    - bash: echo Empieza Deploy en Desarrollo
    - bash: echo $(PipelineLevelVariable)
    - bash: echo $(Build.BuildNumber)
    - bash: echo $(Build.BuildId)
    - bash: echo $(Build.SourceBranchName)
    - bash: echo $(Build.SourcesDirectory)
    - bash: echo $(System.DefaultWorkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory)

# - stage: ExecuteSonarCloudySnykSecurityScan
#   jobs:
#   - job: SonarCloudJob
#     steps:
#     - bash: echo Empieza Validacion SonarCloud
#     - task: SonarCloudPrepare@1
#       inputs:
#         SonarCloud: 'ConexionSonarCloud'
#         organization: 'cambiassorockazuredevsecops'
#         scannerMode: 'MSBuild'
#         projectKey: 'TiendaServicios_Azure'
#         projectName: 'TiendaServicios_Azure'
#     - task: SonarCloudAnalyze@1

  # - job: SnykSecurityJob
  #   steps:
  #   - bash: echo Empieza Validacion SnykSecurity
  #   - task: SnykSecurityScan@1
  #     inputs:
  #       serviceConnectionEndpoint: 'ConexionSnyk'
  #       testType: 'app'
  #       monitorWhen: 'always'
  #       failOnIssues: false
  #       projectName: 'TiendaServicios_Azure'
  #       organization: '5759043e-df6e-4931-85e7-906499b01fc5'
      
    
- stage: QADeploy
  jobs:
  - job: QADeployJob
    steps:
    - bash: echo Empieza Deploy en Calidad

- stage: ProdDeploy
  jobs:
  - job: QADeployJob
    steps:
    - bash: echo Empieza Deploy en Producci√≥n