# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'


stages :
- stage: Build
  jobs:
  - job: Compile
    steps:
    - bash: echo Empieza Build
    - bash: echo Mi Variable:$(PipeLineLeveVariables)
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.DefaultWorkingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '$(Parameters.TestProjects)'
        arguments: '--configuration $(BuildConfiguration)'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/*.zip'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

- stage: DevDeploy
  #dependsOn: Build
  jobs:
  - job: DevDeployJob
    steps:
    - bash: echo Empieza Deploy en Desarrollo
    - bash: echo $(PipelineLevelVariable)
    - bash: echo $(Build.BuildNumber)
    - bash: echo $(Build.BuildId)
    - bash: echo $(Build.SourceBranchName)
    - bash: echo $(Build.SourcesDirectory)
    - bash: echo $(System.DefaultWorkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: dir $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'ejecutables'
        publishLocation: 'Container'
- stage: QADeploy
  jobs:
  - job: QADeployJob
    steps:
    - bash: echo Empieza Deploy en Calidad

- stage: ProdDeploy
  jobs:
  - job: QADeployJob
    steps:
    - bash: echo Empieza Deploy en Producci√≥n